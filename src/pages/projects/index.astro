---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ProjectArrowCard from "@components/ProjectArrowCard.astro";
import { PROJECTS } from "@consts";

const projectsData = await getCollection("projects");
const projects = projectsData
  .filter((project) => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Category =
  | "Gardening"
  | "Cooking & Baking"
  | "Software"
  | "Data Analysis and Machine Learning"
  | "Hardware & Repairs";

const allCategories: Category[] = [
  "Gardening",
  "Cooking & Baking",
  "Software",
  "Data Analysis and Machine Learning",
  "Hardware & Repairs",
];

const selectedCategories: Category[] = allCategories; // Initialize with all categories selected
---

<script lang="ts">
  function handleCategoryChange(event) {
    const target = event.target;
    const selectedOptions = Array.from(target.options)
      .filter((option) => option.selected)
      .map((option) => option.value);
    const queryParams = new URLSearchParams(window.location.search);
    queryParams.set("categories", selectedOptions.join(","));
    history.replaceState({}, "", `${location.pathname}?${queryParams}`);
  }
</script>

<PageLayout title={PROJECTS.TITLE} description={PROJECTS.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">
        Projects
      </div>
      <div>
        <select multiple onchange="handleCategoryChange()">
          {
            allCategories.map((category: Category) => (
              <option
                value={category.toString()}
                selected={selectedCategories.includes(category)}
              >
                {category}
              </option>
            ))
          }
        </select>
      </div>
      <ul class="animate flex flex-col gap-4">
        {
          projects
            .filter((project) =>
              project.data.categories.some((cat) =>
                selectedCategories.includes(cat),
              ),
            )
            .map((project) => (
              <li>
                <ProjectArrowCard
                  entry={project}
                  statusRating={project.data.statusRating}
                  timeInvestmentRating={project.data.timeInvestmentRating}
                  necessityRating={project.data.necessityRating}
                  categories={project.data.categories}
                />
              </li>
            ))
        }
      </ul>
    </div>
  </Container>
</PageLayout>
