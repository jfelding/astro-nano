---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ProjectArrowCard from "@components/ProjectArrowCard.astro";
import { PROJECTS } from "@consts";

const projectsData = await getCollection("projects");
export const projects = projectsData
  .filter((project) => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Category =
  | "Gardening"
  | "Cooking & Baking"
  | "Software"
  | "Data Analysis and Machine Learning"
  | "Hardware & Repairs";

const allCategories: Category[] = [
  "Gardening",
  "Cooking & Baking",
  "Software",
  "Data Analysis and Machine Learning",
  "Hardware & Repairs",
];

let selectedCategories: Category[] = allCategories;

// currently shown projects and convert projects to accessible object
export let shownProjects = projects;


export function handleCategoryChange(event:Event) {
  updateSelectedCategories(event);
  shownProjects = projects.filter((project) =>
    project.data.categories.some((category) =>
      selectedCategories.includes(category),
    ),
  );
}

export function updateSelectedCategories(event:Event) {
  const target = event.target as HTMLInputElement;
   const category = target.value as Category;
   if (target.checked) {
    selectedCategories.push(category);
  } else {
    selectedCategories = selectedCategories.filter(c => c !== category);
  }
}

---

<PageLayout title={PROJECTS.TITLE} description={PROJECTS.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">
        Projects & Ideas
      </div>
      <div>
        {
          allCategories.map((category: Category) => (
            <label>
              <input
                type="checkbox"
                value={category.toString()}
                :onchange={(event: Event) => handleCategoryChange(event)}
                checked={selectedCategories.includes(category)}
              />
              {category}
            </label>
          ))
        }
      </div>
      <ul class="animate flex flex-col gap-4">
        {
          shownProjects.map((project) => (
            <li>
              <ProjectArrowCard
                entry={project}
                statusRating={project.data.statusRating}
                timeInvestmentRating={project.data.timeInvestmentRating}
                necessityRating={project.data.necessityRating}
                categories={project.data.categories}
              />
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</PageLayout>
